{"version":3,"sources":["components/Box/Box.tsx","ducks/board/reducers.ts","ducks/board/actions.ts","ducks/board/types.ts","ducks/board/index.js","components/Card/Card.tsx","containers/DraggableCard/DraggableCard.tsx","services/apiService.ts","containers/BoardColumn/BoardColumn.tsx","components/TextInput/TextInput.tsx","containers/Board/Board.tsx","components/LoadingIcon/LoadingIcon.tsx","containers/Loading/Loading.tsx","App.tsx","index.tsx"],"names":["Box","styled","div","props","width","full","height","column","justify","center","align","margin","marginVertical","marginHorizontal","padding","paddingVertical","paddingHorizontal","bg","border","borderRadius","addTask","state","task","deleteTask","arr","filter","e","id","type","payload","removeTask","moveTask","BoardContext","React","createContext","reducer","action","from","to","removed","added","cardColors","Card","color","dragging","disabled","DraggableCard","children","card","onRemove","useState","isDisabled","setIsDisabled","useDrag","item","position","element","collect","monitor","isDragging","drag","idNumbers","match","join","slice","ref","onClick","BASE_URL","getTasks","a","console","info","fetch","response","json","Error","message","createTask","method","headers","Accept","body","JSON","stringify","updateTaskColumn","toLocaleLowerCase","BoardColumn","useContext","dispatch","cards","title","toLowerCase","useDrop","accept","drop","apiService","updatedTask","boardActions","map","index","key","Math","random","text","TextInput","input","Board","inputRef","useRef","event","preventDefault","current","value","createdTask","onSubmit","placeholder","StyledLoading","BlockBase","Block1","Block2","Block3","LoadingIcon","Loading","initialState","todo","doing","done","App","isLoading","setIsLoading","useReducer","boardReducer","useEffect","forEach","fetchTasks","backend","HTML5Backend","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57256aa0.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport interface BoxProps {\n  ref?: any\n  full?: boolean\n  width?: string | number\n  height?: string | number\n  column?: boolean\n  center?: boolean\n  justify?: string\n  align?: string\n  margin?: string | number\n  marginVertical?: string | number\n  marginHorizontal?: string | number\n  padding?: string | number\n  paddingVertical?: string | number\n  paddingHorizontal?: string | number\n  bg?: string\n  border?: string\n  borderRadius?: string | number\n}\n\nconst Box: React.FC<BoxProps> = styled.div<BoxProps>`\n  box-sizing: border-box;\n  width: ${props =>\n    (props.width && `${props.width}px`) || (props.full && '100%')};\n  height: ${props =>\n    (props.height && `${props.height}px`) || (props.full && '100%')};\n  display: flex;\n  flex: ${props => props.full && 1};\n  flex-direction: ${props => (props.column ? 'column' : 'row')};\n  justify-content: ${props => props.justify || (props.center && 'center')};\n  align-items: ${props => props.align || (props.center && 'center')};\n  margin-top: ${props => props.margin || props.marginVertical}px;\n  margin-bottom: ${props => props.margin || props.marginVertical}px;\n  margin-left: ${props => props.margin || props.marginHorizontal}px;\n  margin-right: ${props => props.margin || props.marginHorizontal}px;\n  padding-top: ${props => props.padding || props.paddingVertical}px;\n  padding-bottom: ${props => props.padding || props.paddingVertical}px;\n  padding-left: ${props => props.padding || props.paddingHorizontal}px;\n  padding-right: ${props => props.padding || props.paddingHorizontal}px;\n  background-color: ${props => props.bg};\n  border: ${props => props.border && `1px solid ${props.border}`};\n  border-radius: ${props => props.borderRadius}px;\n`\n\nexport default Box\n","import * as types from './types'\n\nconst addTask = (state: any, { task }: any) => {\n  return { ...state, [task.column]: [task, ...state[task.column]] }\n}\n\nconst deleteTask = (state: any, { task, column }: any) => {\n  const arr = state[column].filter((e: any) => e.id !== task.id)\n  return { ...state, [column]: arr }\n}\n\nconst moveTask = (state: any, { task, from, to }: any) => {\n  const removed = deleteTask(state, { task, column: from })[from]\n  const added = addTask(state, { task, column: to })[to]\n  return { ...state, [from]: removed, [to]: added }\n}\n\nexport default (state: any, action: { type: string; payload: any }) => {\n  switch (action.type) {\n    case types.ADD_TASK:\n      return addTask(state, action.payload)\n\n    case types.DELETE_TASK:\n      return deleteTask(state, action.payload)\n\n    case types.MOVE_TASK:\n      return moveTask(state, action.payload)\n\n    default:\n      return state\n  }\n}\n","import * as types from './types'\n\nexport const addTask = (task: any) => ({\n  type: types.ADD_TASK,\n  payload: { task },\n})\n\nexport const removeTask = (task: any) => ({\n  type: types.DELETE_TASK,\n  payload: { task, column: task.column },\n})\n\nexport const moveTask = (payload: { task: any; from: any; to: any }) => ({\n  type: types.MOVE_TASK,\n  payload,\n})\n","export const ADD_TASK = 'board/ADD_TASK'\nexport const DELETE_TASK = 'board/DELETE_TASK'\nexport const MOVE_TASK = 'board/MOVE_TASK'\n","import React from 'react'\nimport reducer from './reducers'\nimport * as boardActions from './actions'\n\nexport const BoardContext = React.createContext()\n\nexport { boardActions }\n\nexport default reducer\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const cardColors = [\n  '#e0e0e0',\n  '#fdd835',\n  '#f44336',\n  '#8bc34a',\n  '#2196f3',\n  '#9c27b0',\n  '#f06292',\n  '#ffa726',\n  '#a1887f',\n  '#90a4ae',\n]\n\nexport interface CardProps {\n  ref?: any\n  color?: string\n  dragging?: boolean\n  disabled?: boolean\n}\n\nconst Card: React.FC<CardProps> = styled.div<CardProps>`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  padding: 16px;\n  border-radius: 5px;\n  background: ${props => props.color};\n  opacity: ${props => (props.dragging || props.disabled ? 0.5 : 1)};\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'grab')};\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0 2px 4px -1px rgba(0, 0, 0, 0.06);\n\n  &:active {\n    cursor: grabbing;\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),\n      0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  }\n\n  button {\n    background-color: transparent;\n    border: none;\n    outline: none;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`\n\nexport default Card\n","import React, { useRef, useState } from 'react'\nimport Card, { cardColors } from '../../components/Card'\nimport { useDrag } from 'react-dnd'\nimport { apiService } from '../../services'\nimport LoadingIcon from '../../components/LoadingIcon'\n\nexport interface DraggableCardProps {\n  children: React.ReactNode\n  position: number\n  column: any\n  card: any\n  onRemove: (task: any) => void\n}\n\nconst DraggableCard: React.FC<DraggableCardProps> = (\n  props: DraggableCardProps\n) => {\n  const { children, card, onRemove } = props\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: 'Card',\n      column: props.column,\n      position: props.position,\n      element: props.card,\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  })\n\n  const idNumbers = (card.id && card.id.match(/\\d+/g)) || []\n  const color = cardColors[+idNumbers.join().slice(-1) || 0]\n\n  const handleDeleteButtonClick = () => {\n    setIsDisabled(true)\n    onRemove(card)\n  }\n\n  return (\n    <Card ref={drag} dragging={isDragging} color={color} disabled={isDisabled}>\n      {children}\n      <button onClick={handleDeleteButtonClick}>&times;</button>\n    </Card>\n  )\n}\n\nexport default DraggableCard\n","export const BASE_URL = 'https://us-central1-generic-db2c3.cloudfunctions.net'\n\nexport const getTasks = async () => {\n  console.info(`Fetching tasks from server...`)\n  try {\n    const response = await fetch(`${BASE_URL}/getTasks`)\n    console.info(`Response from server: `, response)\n    return await response.json()\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n\nexport const createTask = async (task: { text: string; column: string }) => {\n  console.info(`Creating new task on the server...`)\n  try {\n    const response = await fetch(`${BASE_URL}/addTask`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ task }),\n    })\n    console.info(`Response from server:`, response)\n    return await response.json()\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n\nexport const updateTaskColumn = async (card: any, to: string) => {\n  console.info(`Updating task column on server...`)\n\n  const task = {\n    ...card,\n    column: to.toLocaleLowerCase(),\n  }\n\n  try {\n    const response = await fetch(`${BASE_URL}/updateTask`, {\n      method: 'PATCH',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ task }),\n    })\n    console.info(`Response from server:`, response)\n    return await response.json()\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n\nexport const deleteTask = async (id: string) => {\n  console.info(`Deleting task on server...`)\n  try {\n    const response = await fetch(`${BASE_URL}/deleteTask?id=${id}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n    console.info(`Response from the server:`, response)\n    return await response.json()\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n","import React, { useContext } from 'react'\nimport { useDrop } from 'react-dnd'\n\nimport { BoardContext, boardActions } from '../../ducks/board'\nimport DraggableCard from '../DraggableCard'\nimport Box from '../../components/Box'\nimport { apiService } from '../../services'\n\nexport interface BoardColumnProps {\n  title: string\n}\n\ntype Card = {\n  type: string\n  column: string\n  position: string | number\n  element: {\n    id: string\n    text: string\n    column: string\n  }\n}\n\nconst BoardColumn: React.FC<BoardColumnProps> = (props: BoardColumnProps) => {\n  const { state, dispatch } = useContext(BoardContext)\n  const cards: any = state[props.title.toLowerCase()]\n  const [, drag] = useDrop({\n    accept: 'Card',\n    drop: async (card: any) => {\n      if (card.column !== props.title) {\n        const updatedTask = await apiService.updateTaskColumn(\n          card.element,\n          props.title.toLowerCase()\n        )\n        const action = boardActions.moveTask({\n          task: updatedTask,\n          from: card.column.toLowerCase(),\n          to: props.title.toLowerCase(),\n        })\n        dispatch(action)\n      }\n    },\n  })\n\n  const deleteTask = async (task: any) => {\n    await apiService.deleteTask(task.id)\n    dispatch(boardActions.removeTask(task))\n  }\n\n  return (\n    <Box\n      ref={drag}\n      column\n      bg=\"whitesmoke\"\n      border=\"gainsboro\"\n      borderRadius={3}\n      padding={20}\n      width={300}\n    >\n      <span>{props.title}</span>\n      {cards &&\n        cards.map((card: any, index: number) => (\n          <Box\n            marginVertical={15}\n            key={`${props.title}-${card.id}__${Math.random()}`}\n          >\n            <DraggableCard\n              column={props.title}\n              position={index}\n              card={card}\n              onRemove={deleteTask}\n            >\n              {card.text}\n            </DraggableCard>\n          </Box>\n        ))}\n    </Box>\n  )\n}\n\nexport default BoardColumn\n","import React from 'react'\nimport styled, { StyledComponentProps } from 'styled-components'\n\nexport interface TextInputProps\n  extends StyledComponentProps<'input', any, {}, never> {}\n\nconst TextInput: React.FC<TextInputProps> = styled.input`\n  box-sizing: border-box;\n  outline: none;\n  background-color: whitesmoke;\n  padding: 10px;\n  width: 250px;\n  border: 1px solid transparent;\n  border-radius: 3px;\n\n  &:hover,\n  &:active,\n  &:focus {\n    border-color: gainsboro;\n  }\n`\n\nexport default TextInput\n","import React, { useContext, useRef, FormEvent } from 'react'\n\nimport { BoardContext, boardActions } from '../../ducks/board'\n\nimport Box from '../../components/Box'\nimport BoardColumn from '../BoardColumn'\nimport TextInput from '../../components/TextInput'\nimport { apiService } from '../../services'\n\nconst Board: React.FC = () => {\n  const { state, dispatch } = useContext(BoardContext)\n  const inputRef = useRef(null)\n\n  const createTask = async (event: FormEvent) => {\n    event.preventDefault()\n    const createdTask = await apiService.createTask({\n      // @ts-ignore\n      text: inputRef.current.value,\n      column: 'todo',\n    })\n    // @ts-ignore\n    inputRef.current.value = ''\n    createdTask && dispatch(boardActions.addTask(createdTask))\n  }\n\n  return (\n    <Box column>\n      <Box justify=\"flex-end\" padding={10}>\n        <form onSubmit={createTask}>\n          <TextInput ref={inputRef} placeholder=\"New task...\" />\n        </form>\n      </Box>\n      <Box>\n        <Box column margin={10}>\n          <BoardColumn title=\"Todo\" />\n        </Box>\n        <Box column margin={10}>\n          <BoardColumn title=\"Doing\" />\n        </Box>\n        <Box column margin={10}>\n          <BoardColumn title=\"Done\" />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Board\n","import React from 'react'\nimport styled, { StyledComponentProps } from 'styled-components'\n\nexport type LoadingIconProps = StyledComponentProps<'i', any, {}, never>\n\nconst StyledLoading = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 64px;\n  height: 64px;\n`\n\nconst BlockBase = styled.div`\n  display: inline-block;\n  position: absolute;\n  left: 6px;\n  width: 13px;\n  background-color: dimgray;\n  animation: loadingAnimation 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\n  @keyframes loadingAnimation {\n    0% {\n      top: 6px;\n      height: 51px;\n    }\n    50%,\n    100% {\n      top: 19px;\n      height: 26px;\n    }\n  }\n`\n\nconst Block1 = styled(BlockBase)`\n  left: 6px;\n  animation-delay: -0.24s;\n`\n\nconst Block2 = styled(BlockBase)`\n  left: 26px;\n  animation-delay: -0.12s;\n`\n\nconst Block3 = styled(BlockBase)`\n  left: 45px;\n  animation-delay: 0;\n`\n\nconst LoadingIcon: React.FC = () => (\n  <StyledLoading>\n    <Block1 /> <Block2 /> <Block3 />\n  </StyledLoading>\n)\n\nexport default LoadingIcon\n","import React from 'react'\nimport Box from '../../components/Box'\nimport LoadingIcon from '../../components/LoadingIcon'\n\nconst Loading: React.FC = () => (\n  <Box full center column>\n    <span>Loading...</span>\n    <Box marginVertical={10}>\n      <LoadingIcon />\n    </Box>\n  </Box>\n)\n\nexport default Loading\n","import React, { useReducer, useEffect, useState } from 'react'\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\n\nimport Box from './components/Box'\nimport Board from './containers/Board'\n\nimport { boardReducer } from './ducks'\nimport { BoardContext, boardActions } from './ducks/board'\nimport { apiService } from './services'\nimport Loading from './containers/Loading'\n\nconst initialState = {\n  todo: [],\n  doing: [],\n  done: [],\n}\n\nconst App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [state, dispatch] = useReducer(boardReducer, initialState)\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const tasks = await apiService.getTasks()\n      tasks.forEach((task: { id: string; column: string; text: string }) => {\n        dispatch(boardActions.addTask(task))\n      })\n      setIsLoading(false)\n    }\n\n    fetchTasks()\n  }, [])\n\n  return isLoading ? (\n    <Loading />\n  ) : (\n    <Box full center>\n      <DndProvider backend={HTML5Backend}>\n        <BoardContext.Provider value={{ state, dispatch }}>\n          <Board />\n        </BoardContext.Provider>\n      </DndProvider>\n    </Box>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}